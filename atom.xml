<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://wingstako.dev/</id>
  <title><![CDATA[wingstako.dev]]></title>
  <subtitle><![CDATA[Blog]]></subtitle>
  <icon>https://wingstako.dev/favicon.ico</icon>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link href="https://wingstako.dev" />
  <link href="https://wingstako.dev/atom.xml" rel="self" type="application/atom+xml" />
  <updated>2022-12-06T09:56:56.595Z</updated>
  <author>
    <name><![CDATA[wingstako]]></name>
  </author>
  <category term="java" scheme="https://wingstako.dev/?tags=java" />
  <category term="spring-boot" scheme="https://wingstako.dev/?tags=spring-boot" />
  <category term="java-mail" scheme="https://wingstako.dev/?tags=java-mail" />
  <category term="spring-mail" scheme="https://wingstako.dev/?tags=spring-mail" />
  <category term="freemarker" scheme="https://wingstako.dev/?tags=freemarker" />
  <category term="tutorial" scheme="https://wingstako.dev/?tags=tutorial" />
  <entry>
    <title type="html"><![CDATA[使用Spring Mail及FreeMarker發送電郵]]></title>
    <link href="https://wingstako.dev/articles/spring-java-mail-with-freemarker" />
    <id>https://wingstako.dev/articles/spring-java-mail-with-freemarker</id>
    <published>2022-11-17T00:00:00.000Z</published>
    <updated>2022-11-17T00:00:00.000Z</updated>
    <summary type="html"><![CDATA[學習用Spring Mail 及 FreeMarker 發送Styled Email]]></summary>
    <content type="html">
      <![CDATA[<p>Github Repository: <a href="https://github.com/wingstako/spring-mail-freemarker-example" rel="nofollow noopener noreferrer external" target="_blank">https://github.com/wingstako/spring-mail-freemarker-example</a></p><h2 id="咩係-spring-mail"><a href="#咩係-spring-mail">咩係 Spring Mail</a></h2><p>Spring Mail係Spring Framework入面一個基於Java Mail用嚟處理電郵嘅 Library。</p><h2 id="咩係-freemarker"><a href="#咩係-freemarker">咩係 FreeMarker</a></h2><p>FreeMarker係一個Template Engine，同Thymeleaf一樣可以用嚟Render Html做Server Side Render嘅網站，唔同於Thymeleaf嘅係，FreeMarker可以用喺Html以外嘅File，例如xml、yaml等，依家用嚟整Email Template都非常好用。</p><h2 id="所需-dependencies"><a href="#所需-dependencies">所需 Dependencies</a></h2><ul><li>Spring Mail</li><li>FreeMarker</li><li>Lombok (Optional)</li></ul><h2 id="設置-spring-mail-sender"><a href="#設置-spring-mail-sender">設置 Spring Mail Sender</a></h2><p>我用<a href="https://www.wpoven.com/tools/free-smtp-server-for-testing" rel="nofollow noopener noreferrer external" target="_blank">WPOven</a>嘅免費SMTP Server嚟做測試，所以唔需要入Username Password，正常都係必須入的，以AWS 嘅Simple Email Service為例，你就需要Create一個專Send Email嘅IAM User。</p><div class="alert flex-col shadow-inner my-4"><div class="mr-auto"><span class="i-heroicons-outline-information-circle"></span>    <div><div>如果你想用JUnit試，copy application.yml去test/resources</div>      </div></div>  </div><!-- HTML_TAG_START --><pre class="shiki material-default with-title" yaml="true" title="application.yml"><div class='code-title'>application.yml</div><div class="language-id">yaml</div><div class='code-container'><code><div class='line'></div><div class='line'>spring:</div><div class='line'>  mail:</div><div class='line'>    host: smtp.freesmtpservers.com</div><div class='line'>    port: 25</div><div class='line'>    username: # SMTP Username</div><div class='line'>    password: # SMTP Password</div><div class='line'>    properties:</div><div class='line'>      mail:</div><div class='line'>        smtp.auth: false # 如果SMTP需要帳戶密碼，set做true</div><div class='line'>        starttls.enable: true # TLS Connection Flag</div><div class='line'></div></code></div></pre><!-- HTML_TAG_END --><h2 id="spring-mail-implementation"><a href="#spring-mail-implementation">Spring Mail Implementation</a></h2><h3 id="發送純文字email"><a href="#發送純文字email">發送純文字Email</a></h3><!-- HTML_TAG_START --><pre class="shiki material-default with-title" java="true" title="MailServiceImpl.java"><div class='code-title'>MailServiceImpl.java</div><div class="language-id">java</div><div class='code-container'><code><div class='line'></div><div class='line'>@Service // MVC格式，implement一個interface再寫implementation</div><div class='line'>public class MailServiceImpl implements MailService &#123;</div><div class='line'></div><div class='line'>    // Autowired JavaMailSender</div><div class='line'>    @Autowired private JavaMailSender mailSender;</div><div class='line'></div><div class='line'>    // 定義發送者電郵地址，常見嘅有no-reply@email.com</div><div class='line'>    private static final String SENDER_ADDRESS = "test-sender-3029@email.com";</div><div class='line'></div><div class='line'>    // 發送純文字電郵</div><div class='line'>    public void sendPlainTextEmail(String subject, String content, String... recipientEmailAddresses) &#123;</div><div class='line'>        SimpleMailMessage message = new SimpleMailMessage();</div><div class='line'>        message.setSubject(subject); // 郵件標題</div><div class='line'>        message.setFrom(SENDER_ADDRESS);</div><div class='line'>        message.setTo(recipientEmailAddresses); // 收件人電郵地址</div><div class='line'>        message.setText(content); // 郵件內容</div><div class='line'></div><div class='line'>        this.mailSender.send(message);</div><div class='line'>    &#125;</div><div class='line'></div><div class='line'>&#125;</div></code></div></pre><!-- HTML_TAG_END --><h3 id="發送html-email"><a href="#發送html-email">發送Html Email</a></h3><!-- HTML_TAG_START --><pre class="shiki material-default with-title" java="true" title="MailServiceImpl.java"><div class='code-title'>MailServiceImpl.java</div><div class="language-id">java</div><div class='code-container'><code><div class='line'>@Service // MVC格式，implement一個interface再寫implementation</div><div class='line'>public class MailServiceImpl implements MailService &#123;</div><div class='line'></div><div class='line'>    // Autowired JavaMailSender</div><div class='line'>    @Autowired private JavaMailSender mailSender;</div><div class='line'></div><div class='line'>    // 定義發送者電郵地址，常見嘅有no-reply@email.com</div><div class='line'>    private static final String SENDER_ADDRESS = "test-sender-3029@email.com";</div><div class='line'></div><div class='line'>    // 發送HTML Email</div><div class='line'>    public void sendHtmlEmail(String subject, String htmlContent, String... recipientEmailAddresses) throws MessagingException &#123;</div><div class='line'>          MimeMessage mimeMessage = mailSender.createMimeMessage();</div><div class='line'>          MimeMessageHelper helper = new MimeMessageHelper(mimeMessage);</div><div class='line'>          helper.setSubject(subject); // 郵件標題</div><div class='line'>          helper.setFrom(SENDER_ADDRESS);</div><div class='line'>          helper.setTo(recipientEmailAddresses); // 收件人電郵地址</div><div class='line'>          helper.setText(htmlContent, true); // 使用Html格式的郵件內容</div><div class='line'>          mailSender.send(mimeMessage);</div><div class='line'>    &#125;</div><div class='line'>&#125;</div></code></div></pre><!-- HTML_TAG_END --><h2 id="freemarker-implemetation"><a href="#freemarker-implemetation">FreeMarker Implemetation</a></h2><h3 id="建立template"><a href="#建立template">建立Template</a></h3><p>首先喺<code>resources/templates</code>下建立一個FreeMarker Template，例如<code>verification.ftl</code>。</p><!-- HTML_TAG_START --><pre class="shiki material-default with-title" html="true" title="verification.ftl"><div class='code-title'>verification.ftl</div><div class="language-id">html</div><div class='code-container'><code><div class='line'></div><div class='line'>&lt;!DOCTYPE html&gt;</div><div class='line'>&lt;html lang="en"&gt;</div><div class='line'>&lt;body&gt;</div><div class='line'></div><div class='line'>    &lt;div&gt;</div><div class='line'>        &lt;h3&gt;Authentication Code&lt;/h3&gt;</div><div class='line'>        &lt;p&gt;$&#123;verification.code&#125;&lt;/p&gt;</div><div class='line'>    &lt;/div&gt;</div><div class='line'></div><div class='line'>&lt;/body&gt;</div><div class='line'>&lt;/html&gt;</div><div class='line'></div></code></div></pre><!-- HTML_TAG_END --><h3 id="建立與template關聯嘅class"><a href="#建立與template關聯嘅class">建立與Template關聯嘅Class</a></h3><p>喺呢個Class入面，你可以定義Template會用到嘅變數，以驗證電郵為例，code就係一個變數</p><div class="alert flex-col shadow-inner my-4   alert-warning"><div class="mr-auto"><span class="i-heroicons-outline-exclamation-circle"></span>    <div><div>Field名（例如code）最好跟FreeMarker Template</div>      </div></div>  </div><!-- HTML_TAG_START --><pre class="shiki material-default with-title" java="true" title="VerificationTemplate.java"><div class='code-title'>VerificationTemplate.java</div><div class="language-id">java</div><div class='code-container'><code><div class='line'></div><div class='line'>@Data</div><div class='line'>public class VerificationTemplate &#123;</div><div class='line'>    private String code;</div><div class='line'>&#125;</div><div class='line'></div><div class='line'></div></code></div></pre><!-- HTML_TAG_END --><h3 id="發送templated-email"><a href="#發送templated-email">發送Templated Email</a></h3><!-- HTML_TAG_START --><pre class="shiki material-default" java="true"><div class="language-id">java</div><div class='code-container'><code><div class='line'></div><div class='line'>@Service</div><div class='line'>public class MailServiceImpl implements MailService &#123;</div><div class='line'></div><div class='line'>    // Autowired JavaMailSender</div><div class='line'>    @Autowired private JavaMailSender mailSender;</div><div class='line'></div><div class='line'>    // Autowired freemarker.template.Configuration</div><div class='line'>    @Autowired private Configuration configuration;</div><div class='line'></div><div class='line'>    // 定義發送者電郵地址，常見嘅有no-reply@email.com</div><div class='line'>    private static final String SENDER_ADDRESS = "test-sender-3029@email.com";</div><div class='line'></div><div class='line'>    // 發送認證格式郵件</div><div class='line'>    public void sendVerificationEmail(String subject, String code, String... recipientEmailAddresses) </div><div class='line'>            throws IOException, TemplateException, MessagingException &#123;</div><div class='line'>        </div><div class='line'>        VerificationTemplate verificationTemplate = VerificationTemplate.builder()</div><div class='line'>                .code(code)</div><div class='line'>                .build();</div><div class='line'></div><div class='line'>        StringWriter stringWriter = new StringWriter();</div><div class='line'>        Map&lt;String, Object&gt; model = new HashMap&lt;&gt;();</div><div class='line'>        // 呢度嘅Key要同Template入面variable嘅prefix一樣</div><div class='line'>        model.put("verification", verificationTemplate);</div><div class='line'>        // Freemarker會攞verfication.ftl然後map翻啲variable，再將結果寫入stringWriter</div><div class='line'>        configuration.getTemplate("verification.ftl").process(model, stringWriter);</div><div class='line'>        </div><div class='line'>        String templatedContent = stringWriter.getBuffer().toString();</div><div class='line'>        </div><div class='line'>        this.sendHtmlEmail(subject, templatedContent, recipientEmailAddresses);</div><div class='line'>    &#125;</div><div class='line'></div><div class='line'>&#125;</div></code></div></pre><!-- HTML_TAG_END --><h2 id="測試"><a href="#測試">測試</a></h2><h3 id="用junit測試嘅code"><a href="#用junit測試嘅code">用JUnit測試嘅Code</a></h3><!-- HTML_TAG_START --><pre class="shiki material-default" java="true"><div class="language-id">java</div><div class='code-container'><code><div class='line'></div><div class='line'>@SpringBootTest</div><div class='line'>public class MailServiceImplTest &#123;</div><div class='line'></div><div class='line'>    @Autowired</div><div class='line'>    private MailServiceImpl mailService;</div><div class='line'></div><div class='line'>    @Autowired</div><div class='line'>    private Configuration configuration;</div><div class='line'></div><div class='line'>    @Test</div><div class='line'>    public void testSendPlainTextEmail() &#123;</div><div class='line'></div><div class='line'>        String subject = "[Test] Plain Text";</div><div class='line'>        String content = "This is a plain text email";</div><div class='line'>        String recipient = "test-receiver-3029@email.com";</div><div class='line'></div><div class='line'>        mailService.sendPlainTextEmail(subject, content, recipient);</div><div class='line'>    &#125;</div><div class='line'></div><div class='line'>    @Test</div><div class='line'>    public void testSendHtmlEmail() throws MessagingException &#123;</div><div class='line'></div><div class='line'>        String subject = "[Test] HTML";</div><div class='line'>        String content = "&lt;h1&gt;This is a HTML email&lt;/h1&gt;";</div><div class='line'>        String recipient = "test-receiver-3029@email.com";</div><div class='line'></div><div class='line'>        mailService.sendHtmlEmail(subject, content, recipient);</div><div class='line'>    &#125;</div><div class='line'></div><div class='line'>    @Test</div><div class='line'>    public void testSendTemplatedVerificationEmail() throws MessagingException, TemplateException, IOException &#123;</div><div class='line'></div><div class='line'>        String subject = "[Test] Templated";</div><div class='line'>        String code = "123456";</div><div class='line'>        String recipient = "test-receiver-3029@email.com";</div><div class='line'></div><div class='line'>        this.mailService.sendVerificationEmail(subject, code, recipient);</div><div class='line'>    &#125;</div><div class='line'></div><div class='line'>&#125;</div></code></div></pre><!-- HTML_TAG_END --><h3 id="結果"><a href="#結果">結果</a></h3><h4 id="1-plain-text-email"><a href="#1-plain-text-email">1. Plain text email</a></h4><p><img src="../../articles/spring-java-mail-with-freemarker/plain-text-email.png" alt="plain text email" class="rounded-lg my-2" loading="lazy" decoding="async"></p><h4 id="2-html-email"><a href="#2-html-email">2. Html Email</a></h4><p><img src="../../articles/spring-java-mail-with-freemarker/html-email.png" alt="html email" class="rounded-lg my-2" loading="lazy" decoding="async"></p><h4 id="3-templated-email"><a href="#3-templated-email">3. Templated Email</a></h4><p><img src="../../articles/spring-java-mail-with-freemarker/templated-email.png" alt="templated email" class="rounded-lg my-2" loading="lazy" decoding="async"></p>]]>
    </content>
    <category term="java" scheme="https://wingstako.dev/?tags=java" />
    <category term="spring-boot" scheme="https://wingstako.dev/?tags=spring-boot" />
    <category term="java-mail" scheme="https://wingstako.dev/?tags=java-mail" />
    <category term="spring-mail" scheme="https://wingstako.dev/?tags=spring-mail" />
    <category term="freemarker" scheme="https://wingstako.dev/?tags=freemarker" />
    <category term="tutorial" scheme="https://wingstako.dev/?tags=tutorial" />
  </entry>
</feed>